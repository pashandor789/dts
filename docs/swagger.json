{
    "swagger": "2.0",
    "info": {
        "description": "HTTP Tabasco",
        "title": "Task Batching Storage Coordinator API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/build": {
            "put": {
                "description": "Put build.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Put build",
                "parameters": [
                    {
                        "description": "Build",
                        "name": "build",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Build"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/http.Success"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/builds": {
            "get": {
                "description": "Retrieves a list of builds.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get builds",
                "responses": {
                    "200": {
                        "description": "List of builds",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Build"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/tests": {
            "put": {
                "description": "Put tests in format {i}_input, {i}_output and task_meta.json.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Put tests",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File for build; expected keys in format: {i}_input / {i}_output",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/http.Success"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.Error": {
            "type": "object",
            "properties": {
                "payload": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "http.Success": {
            "type": "object",
            "properties": {
                "payload": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "types.Build": {
            "type": "object",
            "properties": {
                "execute_script": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "init_script": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}